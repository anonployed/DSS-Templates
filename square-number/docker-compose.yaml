services:
    anvil:
        image: ghcr.io/foundry-rs/foundry:nightly
        platform: linux/amd64
        ports:
            - "8545:8545"
        volumes:
            - shared_data:/app
        environment:
          - ANVIL_IP_ADDR=0.0.0.0
        working_dir: /app/contracts
        command: anvil --no-cors

    contract-deployer:
        image: ghcr.io/foundry-rs/foundry:nightly
        platform: linux/amd64
        volumes:
            - shared_data:/app
        working_dir: /app/contracts
        depends_on:
            - anvil
        entrypoint:
            - /bin/sh
            - -c
            - |
                sleep 3 &&
                forge script script/deploy.sol --rpc-url http://anvil:8545 --private-key 0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80 --broadcast --skip-simulation &&
                echo "success" > /app/deploy.status || echo "failure" > /app/deploy.status

    operator-1:
        image: node:22.5-slim
        volumes:
            - shared_data:/app
        working_dir: /app/operator
        depends_on:
            - contract-deployer
        ports:
            - "8080:8080"
        environment:
            - NODE_ENV=development
            - PORT=8080
            - HOST=localhost
            - RPC_URL=http://anvil:8545
            - CORS_ORIGIN=*
            - COMMON_RATE_LIMIT_WINDOW_MS=1000
            - COMMON_RATE_LIMIT_MAX_REQUESTS=10000
            - AGGREGATOR_URL=http://aggregator:3000
            - HEARTBEAT=1000
            - PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
        command: >
          sh -c "
            while [ ! -f /app/deploy.status ] || [ $(cat /app/deploy.status) != 'success' ]; do
              echo 'Waiting for contract-deployer to complete...';
              sleep 2;
            done &&
            yarn &&
            yarn dev
          "

    operator-2:
        image: node:22.5-slim
        volumes:
            - shared_data:/app
        working_dir: /app/operator
        depends_on:
            - contract-deployer
        ports:
            - "8081:8081"
        environment:
            - NODE_ENV=development
            - PORT=8081
            - HOST=localhost
            - RPC_URL=http://anvil:8545
            - CORS_ORIGIN=*
            - COMMON_RATE_LIMIT_WINDOW_MS=1000
            - COMMON_RATE_LIMIT_MAX_REQUESTS=10000
            - AGGREGATOR_URL=http://aggregator:3000
            - HEARTBEAT=1000
            - PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
        command: >
          sh -c "
            while [ ! -f /app/deploy.status ] || [ $(cat /app/deploy.status) != 'success' ]; do
              echo 'Waiting for contract-deployer to complete...';
              sleep 2;
            done &&
            yarn &&
            yarn dev
          "

    aggregator:
        image: node:22.5-slim
        volumes:
            - shared_data:/app
        working_dir: /app/aggregator
        depends_on:
            - contract-deployer
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=development
            - PORT=3000
            - HOST=localhost
            - HEARTBEAT=5000
            - RPC_URL=http://anvil:8545
            - CORS_ORIGIN=*
            - COMMON_RATE_LIMIT_WINDOW_MS=1000
            - COMMON_RATE_LIMIT_MAX_REQUESTS=10000
            - PRIVATE_KEY=0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d
            - CONTRACTS_JSON=/app/contracts/contract-addresses.json
        command: >
          sh -c "
            while [ ! -f /app/deploy.status ] || [ $(cat /app/deploy.status) != 'success' ]; do
              echo 'Waiting for contract-deployer to complete...';
              sleep 2;
            done &&
            yarn &&
            yarn dev
          " 

volumes:
    shared_data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: ./
